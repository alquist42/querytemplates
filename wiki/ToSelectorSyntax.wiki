#sidebar SyntaxSidebar
= `ToSelector` =
[http://code.google.com/p/querytemplates/w/list Wiki] > [Syntax Syntax] > [ToSelectorSyntax ToSelector]

[ToSelectorSyntax ToSelector] methods injects data (dynamic / static / executable) into nodes matched by *dynamic selector pattern*, based on provided *fields list*.

== Methods ==
 * [codeToSelectorMethod codeToSelector]
 * [codeToSelectorAfterMethod codeToSelectorAfter]
 * [codeToSelectorAppendMethod codeToSelectorAppend]
 * [codeToSelectorAttrMethod codeToSelectorAttr]
 * [codeToSelectorBeforeMethod codeToSelectorBefore]
 * [codeToSelectorPrependMethod codeToSelectorPrepend]
 * [codeToSelectorReplaceMethod codeToSelectorReplace]
 * [valuesToSelectorMethod valuesToSelector]
 * [valuesToSelectorAfterMethod valuesToSelectorAfter]
 * [valuesToSelectorAppendMethod valuesToSelectorAppend]
 * [valuesToSelectorAttrMethod valuesToSelectorAttr]
 * [valuesToSelectorBeforeMethod valuesToSelectorBefore]
 * [valuesToSelectorPrependMethod valuesToSelectorPrepend]
 * [valuesToSelectorReplaceMethod valuesToSelectorReplace]
 * [varsToSelectorMethod varsToSelector]
 * [varsToSelectorAfterMethod varsToSelectorAfter]
 * [varsToSelectorAppendMethod varsToSelectorAppend]
 * [varsToSelectorAttrMethod varsToSelectorAttr]
 * [varsToSelectorBeforeMethod varsToSelectorBefore]
 * [varsToSelectorPrependMethod varsToSelectorPrepend]
 * [varsToSelectorReplaceMethod varsToSelectorReplace]


== Example ==
=== Markup ===
{{{
 <p class='field1'>lorem ipsum</p>
 <p class='field2'>lorem ipsum</p>
}}}
=== Data ===
{{{
 $foo = array('field1' => 'foo', 'field2' => 'bar');
}}}
=== `QueryTemplates` Formula ===
{{{
 $template->varsToSelector('foo', $foo);
}}}
=== Template ===
{{{
 <p class="field1"><?php  if (isset($foo['field1'])) print $foo['field1'];
 else if (isset($foo->{'field1'})) print $foo->{'field1'};  ?></p>
 <p class="field2"><?php  if (isset($foo['field2'])) print $foo['field2'];
 else if (isset($foo->{'field2'})) print $foo->{'field2'};  ?></p>
}}}
=== Template tree before ===
{{{
 p.field1
  - Text:lorem ipsum
 p.field2
  - Text:lorem ipsum
}}}
=== Template tree after ===
{{{
 p.field1
  - PHP
 p.field2
  - PHP
}}}