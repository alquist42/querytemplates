= codeToStackAttr =
[http://code.google.com/p/querytemplates/w/list Wiki] > [Syntax Syntax] > [codeToSyntax codeTo] > [codeToStackAttrMethod codeToStackAttr]
=== Parameters ===
 * *$codeArray* _String_
  Array of raw code, where key is the field.
 * *$skipFields* _Array_ = null
  Array of fields from $codeArray which should be skipped.
 * *$fieldCallback* _Callback|string_ = null
  Callback triggered after every insertion. Three parameters are passed to  this callback: 
   * phpQueryObject $node
   * string $field
   * string|array $target
 * *$attr* __

 * *$selectorPattern* __ = '.%k'



Injects raw executable code inside attribute of actually matched nodes.
Method doesn't change selected elements stack.
== Example ==
=== Markup ===  
{{{
 <node1>
   <node2></node2>
 </node1>
 <node2></node2>
 <node1>
   <node2></node2>
 </node1>

}}}
=== Formula ===  
{{{
 $code = array(
   'field1' => 'print "abba";',
   'field2' => 'foreach(array(1, 2, 3) as $i) print $i'
 );
 $template['node1']->codeToStackAttr('rel', $code);

}}}
=== Template ===  
{{{
 <node1 rel='<?php  print "abba";  ?>'><node2></node2></node1><node2></node2><node1 rel="<?php  foreach(array(1, 2, 3) as $i) print $i  ?>"><node2></node2></node1>

}}}
----

== See also ==
 * [codeToSelectorMethod codeToSelector]


=== Comments allowed ===