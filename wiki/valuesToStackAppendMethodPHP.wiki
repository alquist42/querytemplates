#sidebar SyntaxSidebar
= `valuesToStackAppend` =
[http://code.google.com/p/querytemplates/w/list Wiki] > [Syntax Syntax] > [valuesToSyntax valuesTo] > [valuesToStackAppendMethodPHP valuesToStackAppend]
=== Parameters ===
 * *$values* _Array|Object_
  Associative array or Object containing markup, text or instance of Callback.
 * *$fieldCallback* _Callback|string_ = `null`
  Callback triggered after every insertion. Three parameters are passed to  this callback: 
   * $node phpQueryObject
   * $field String
   * $target String|array
 * *$skipFields*  = `null`



=== Description ===
Injects markup from $data's content (rows or attributes) inside actually  selected nodes.


Method doesn't change selected nodes stack.


== Example ==


=== Markup ===
{{{
 <node1>
     <node2></node2>
 </node1>
 <node1>
     <node2></node2>
 </node1>

}}}
=== Data ===
{{{
 $values = array('<foo/>', '<bar/>');

}}}
=== `QueryTemplates` formula ===
{{{
 $template->
     valuesToStackAppend($values)
 ;

}}}
=== Template ===
{{{
 <node1><node2></node2></node1><node1><node2></node2></node1><foo></foo>

}}}
=== Template tree before ===
{{{
 node1
  - node2
 node1
  - node2

}}}
=== Template tree after ===
{{{
 node1
  - node2
 node1
  - node2
 foo

}}}
----

== See also ==
 * [valuesToSelectorMethodPHP valuesToSelector]
 * [valuesToFormMethodPHP valuesToForm]


=== Comments allowed ===