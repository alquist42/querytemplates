#sidebar SyntaxSidebar
= `ToStack` =
[http://code.google.com/p/querytemplates/w/list Wiki] > [Syntax Syntax] > [ToStackSyntax ToStack]

[ToStackSyntax ToStack] methods injects data (dynamic / static / executable) into actually matched nodes.

== Methods ==
 * [codeToStackMethod codeToStack]
 * [codeToStackAfterMethod codeToStackAfter]
 * [codeToStackAppendMethod codeToStackAppend]
 * [codeToStackAttrMethod codeToStackAttr]
 * [codeToStackBeforeMethod codeToStackBefore]
 * [codeToStackPrependMethod codeToStackPrepend]
 * [codeToStackReplaceMethod codeToStackReplace]
 * [valuesToStackMethod valuesToStack]
 * [valuesToStackAfterMethod valuesToStackAfter]
 * [valuesToStackAppendMethod valuesToStackAppend]
 * [valuesToStackAttrMethod valuesToStackAttr]
 * [valuesToStackBeforeMethod valuesToStackBefore]
 * [valuesToStackPrependMethod valuesToStackPrepend]
 * [valuesToStackReplaceMethod valuesToStackReplace]
 * [varsToStackMethod varsToStack]
 * [varsToStackAfterMethod varsToStackAfter]
 * [varsToStackAppendMethod varsToStackAppend]
 * [varsToStackAttrMethod varsToStackAttr]
 * [varsToStackBeforeMethod varsToStackBefore]
 * [varsToStackPrependMethod varsToStackPrepend]
 * [varsToStackReplaceMethod varsToStackReplace]

== Example ==
=== Markup ===
{{{
 <node1>
   <node2></node2>
 </node1>
 <node2></node2>
 <node1>
   <node2></node2>
 </node1>	
}}}
=== Data ===
{{{
 $foo = array('<foo/>', '<bar/>');
}}}
=== `QueryTemplates` Formula ===
{{{
 $template['node1']->varsToStack('foo', array_keys($foo));
}}}
=== Template ===
{{{
 <node1><?php  if (isset($foo['0'])) print $foo['0'];
 else if (isset($foo->{'0'})) print $foo->{'0'};  ?></node1><node2></node2><node1><?php  if (isset($foo['1'])) print $foo['1'];
 else if (isset($foo->{'1'})) print $foo->{'1'};  ?></node1>
}}}
=== Template tree before ===
{{{
 node1
  - node2
 node2
 node1
  - node2
}}}
=== Template tree after ===
{{{
 node1
  - PHP
 node2
 node1
  - PHP
}}}